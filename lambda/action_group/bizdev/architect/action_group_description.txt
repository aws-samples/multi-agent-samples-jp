このアクショングループは、システムアーキテクチャ設計、クラス図作成、シーケンス図作成、およびAPI設計を行うアーキテクトエージェントの機能を提供します。

以下の関数を含みます：

1. create_architecture
   説明: 製品要件書(PRD)に基づいてシステムアーキテクチャを設計します。コンポーネント、それらの相互作用、データフロー、技術選択などを含む包括的なアーキテクチャ設計を提供します。
   パラメータ:
   - requirement: ユーザーから提供された要件の詳細説明。
     タイプ: string
     必須: はい
   - prd_id: 以前に作成された製品要件書(PRD)のID。
     タイプ: string
     必須: いいえ
   - project_id: プロジェクトを識別するための一意のID。指定しない場合は自動生成されます。
     タイプ: string
     必須: いいえ
   - user_id: リクエストを行ったユーザーのID。
     タイプ: string
     必須: いいえ

2. create_class_diagram
   説明: アーキテクチャに基づいてPlantUML形式のクラス図を作成します。クラス、属性、メソッド、およびそれらの関係を定義します。
   パラメータ:
   - architecture_id: 以前に作成されたアーキテクチャのID。
     タイプ: string
     必須: はい
   - project_id: プロジェクトを識別するための一意のID。
     タイプ: string
     必須: はい
   - timestamp: 処理のタイムスタンプ。
     タイプ: string
     必須: いいえ

3. create_sequence_diagram
   説明: 特定のユースケースに対するPlantUML形式のシーケンス図を作成します。アクター、コンポーネント、およびそれらの時間経過に伴う相互作用を定義します。
   パラメータ:
   - architecture_id: 以前に作成されたアーキテクチャのID。
     タイプ: string
     必須: はい
   - use_case: シーケンス図を作成するユースケースの説明。例: "ユーザーログインプロセス"
     タイプ: string
     必須: はい
   - project_id: プロジェクトを識別するための一意のID。
     タイプ: string
     必須: はい
   - timestamp: 処理のタイムスタンプ。
     タイプ: string
     必須: いいえ

4. create_api_design
   説明: アーキテクチャに基づいてOpenAPI/Swagger形式のAPI設計を作成します。エンドポイント、HTTPメソッド、リクエスト/レスポンス形式、ステータスコードを定義します。
   パラメータ:
   - architecture_id: 以前に作成されたアーキテクチャのID。
     タイプ: string
     必須: はい
   - project_id: プロジェクトを識別するための一意のID。
     タイプ: string
     必須: はい
   - timestamp: 処理のタイムスタンプ。
     タイプ: string
     必須: いいえ